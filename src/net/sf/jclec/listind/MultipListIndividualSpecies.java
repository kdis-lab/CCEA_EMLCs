package net.sf.jclec.listind;

import net.sf.jclec.IConfigure;

import org.apache.commons.lang.builder.EqualsBuilder;

import org.apache.commons.configuration.Configuration;

/**
 * MultipListIndividual species.
 * 
 * Species for individuals of type "MultipListIndividual". This species set its 
 * schema explicitly (using the setSchema() method). 
 * 
 * @author Jose M. Moyano
 * @author Sebastian Ventura 
 */

public final class MultipListIndividualSpecies extends MultipListSpecies implements IConfigure 
{
	/////////////////////////////////////////////////////////////////
	// --------------------------------------- Serialization constant
	/////////////////////////////////////////////////////////////////
	
	/** Generated by Eclipse */
	private static final long serialVersionUID = 1849608890559693424L;

	/////////////////////////////////////////////////////////////////
	// ------------------------------------------------- Constructors
	/////////////////////////////////////////////////////////////////
	
	/**
	 * Empty constructor
	 */
	public MultipListIndividualSpecies() 
	{
		super();
	}

	/**
	 * Constructor that sets individual species
	 */
	public MultipListIndividualSpecies(MultipListGenotype genotypeSchema) 
	{
		super();
		setGenotypeSchema(genotypeSchema);
	}

	
	/////////////////////////////////////////////////////////////////
	// ----------------------------------------------- Public methods
	/////////////////////////////////////////////////////////////////
	
	// Setting properties
	
	/**
	 * Sets genotype schema.
	 * 
	 * This method is used  in marshall/unmarshall  and configuration
	 * methods. 
	 * 
	 * @param genotypeSchema New genotype schema.
	 */
	public void setGenotypeSchema(MultipListGenotype genotypeSchema)
	{
		this.genotypeSchema = genotypeSchema;
	}
	
	// Factory method
	
	/**
	 * Factory method.
	 * 
	 * @param genotype Individual genotype
	 */
	public MultipListIndividual createIndividual(MultipListGenotype genotype) 
	{
		return new MultipListIndividual(genotype);
	}


	// IConfigure interface

	/**
	 * Configuration parameters for this species are:
	 * 
	 * <ul>
	 * <li>
	 * <code>[@genotype-length] (int)</code></p>
	 *  Genotype length. If this parameter is set, 'genotype-schema'
	 *  parameter is ignored and all schema positions are set to '*'.
	 * </li>
	 * <li>
	 * <code>genotype-schema  (String)</code></p>
	 * Genotype schema. This parameter contains characters '1', '0' 
	 * and '*' to represent schema elements...   
	 * </li>
	 * </ul> 
	 */
	public void configure(Configuration configuration) 
	{
		// Set genotype schema
		setGenotypeSchema(new MultipListGenotype());
	}

	/////////////////////////////////////////////////////////////////
	// ----------------------------------- Overwriting Object methods
	/////////////////////////////////////////////////////////////////
	
	/**
	 * {@inheritDoc}
	 */
	public boolean equals(Object other)
	{
		if (other instanceof MultipListIndividualSpecies) {
			EqualsBuilder eb = new EqualsBuilder();
			MultipListIndividualSpecies baoth = (MultipListIndividualSpecies) other;
			eb.append(this.genotypeSchema, baoth.genotypeSchema);
			eb.append(this.p, baoth.p);
			return eb.isEquals();
		}
		else {
			return false;
		}
	}
}

